{
  "hash": "c93c68fec8e26db594446e2c4266433a",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Hrishabh\"\n---\n\n\n::: callout-note\nData Aquisition\n:::\n\n---\n\n\n\n\n\n# Data Aquisition: API Challenge\n## Top Songs for Taylor Swift from Spotify\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_0a9014864ee570b1852ff70c4e4b2fce'}\n\n```{.r .cell-code}\nlibrary(httr)\n#replace this with yours\nclientID = 'a8a4b01d406740f988365684cd610827'\nsecret = 'e63cc9177af64612a0d8445e37635e39'\nresponse = POST(\n  'https://accounts.spotify.com/api/token',\n  accept_json(),\n  authenticate(clientID, secret),\n  body = list(grant_type = 'client_credentials'),\n  encode = 'form',\n  verbose()\n)\n```\n\n```{.r .cell-code}\nmytoken = content(response)$access_token\nHeaderValue = paste0('Bearer ', mytoken)\n\nalbumID = \"1NAmidJlEaVgA3MpcPFYGq\"\ntrack_URI = paste0('https://api.spotify.com/v1/albums/', albumID,'/tracks')\ntrack_response = GET(url = track_URI, add_headers(Authorization = HeaderValue))\ntracks = content(track_response)\n\nntracks = length(tracks$items)\ntracks_list<-data.frame(\n  name=character(ntracks),\n  id=character(ntracks),\n  artist=character(ntracks),\n  disc_number=numeric(ntracks),\n  track_number=numeric(ntracks),\n  duration_ms=numeric(ntracks),\n  stringsAsFactors=FALSE\n)\n\nfor(i in 1:ntracks){\n  tracks_list[i,]$id <- tracks$items[[i]]$id\n  tracks_list[i,]$name <- tracks$items[[i]]$name\n  tracks_list[i,]$artist <- tracks$items[[i]]$artists[[1]]$name\n  tracks_list[i,]$disc_number <- tracks$items[[i]]$disc_number\n  tracks_list[i,]$track_number <- tracks$items[[i]]$track_number\n  tracks_list[i,]$duration_ms <- tracks$items[[i]]$duration_ms\n}\ntracks_list\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"id\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"artist\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"disc_number\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"track_number\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"duration_ms\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"I Forgot That You Existed\",\"2\":\"43rA71bccXFGD4C8GOpIlN\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"1\",\"6\":\"170640\"},{\"1\":\"Cruel Summer\",\"2\":\"1BxfuPKGuaTgP7aM0Bbdwr\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"2\",\"6\":\"178426\"},{\"1\":\"Lover\",\"2\":\"1dGr1c8CrMLDpV6mPbImSI\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"3\",\"6\":\"221306\"},{\"1\":\"The Man\",\"2\":\"3RauEVgRgj1IuWdJ9fDs70\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"4\",\"6\":\"190360\"},{\"1\":\"The Archer\",\"2\":\"3pHkh7d0lzM2AldUtz2x37\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"5\",\"6\":\"211240\"},{\"1\":\"I Think He Knows\",\"2\":\"2YWtcWi3a83pdEg3Gif4Pd\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"6\",\"6\":\"173386\"},{\"1\":\"Miss Americana & The Heartbreak Prince\",\"2\":\"214nt20w5wOxJnY462klLw\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"7\",\"6\":\"234146\"},{\"1\":\"Paper Rings\",\"2\":\"4y5bvROuBDPr5fuwXbIBZR\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"8\",\"6\":\"222400\"},{\"1\":\"Cornelia Street\",\"2\":\"12M5uqx0ZuwkpLp5rJim1a\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"9\",\"6\":\"287266\"},{\"1\":\"Death By A Thousand Cuts\",\"2\":\"2dgFqt3w9xIQRjhPtwNk3D\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"10\",\"6\":\"198533\"},{\"1\":\"London Boy\",\"2\":\"1LLXZFeAHK9R4xUramtUKw\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"11\",\"6\":\"190240\"},{\"1\":\"Soon You’ll Get Better (feat. The Chicks)\",\"2\":\"4AYtqFyFbX0Xkc2wtcygTr\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"12\",\"6\":\"201586\"},{\"1\":\"False God\",\"2\":\"5hQSXkFgbxjZo9uCwd11so\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"13\",\"6\":\"200306\"},{\"1\":\"You Need To Calm Down\",\"2\":\"6RRNNciQGZEXnqk8SQ9yv5\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"14\",\"6\":\"171360\"},{\"1\":\"Afterglow\",\"2\":\"1SymEzIT3H8UZfibCs3TYi\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"15\",\"6\":\"223293\"},{\"1\":\"ME! (feat. Brendon Urie of Panic! At The Disco)\",\"2\":\"2Rk4JlNc2TPmZe2af99d45\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"16\",\"6\":\"193000\"},{\"1\":\"It’s Nice To Have A Friend\",\"2\":\"1SmiQ65iSAbPto6gPFlBYm\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"17\",\"6\":\"150440\"},{\"1\":\"Daylight\",\"2\":\"1fzAuUVbzlhZ1lJAx9PtY6\",\"3\":\"Taylor Swift\",\"4\":\"1\",\"5\":\"18\",\"6\":\"293453\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# Data Aquisition: Web Scraping Challenge\n\nLast compiled: 2023-08-09\n\n\n\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_c3071ae4b3cd77745ef259ff5a3d2a00'}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(stringi)\nlibrary(xopen)\nlibrary(jsonlite)\nlibrary(tidyverse)\nlibrary(glue)\n\nurl <- \"https://www.radon-bikes.de\"\nxopen(url)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Running cmd /c start \"\\\"\\\"\" /b \"https://www.radon-bikes.de\"\n```\n:::\n\n```{.r .cell-code}\nhtml_home <- read_html(url)\n#Get url fpr eacf of the product categories\nbike_category_url_tbl <- html_home %>% html_nodes(\".megamenu__item\") %>% html_elements(\"a\") %>% \n  html_attr('href') %>% enframe(name = 'position',value = 'title') %>% mutate(\n    category_url=glue(\"https://www.radon-bikes.de{title}\")\n  ) %>% filter(position<9)#remove accessories and gears using filter\n\n\n\n#Get the Model Names\nget_bike_data <- function(link){\n  model_infor <- read_html(link) %>% html_nodes(\".o-slick-slider__slide-content\") %>% html_element(\"h2\") %>% \n    html_text() %>% enframe(name = \"position\",value = 'Model Name')\n  #Get the sizes\n  bike_sizes <- read_html(link) %>% html_nodes(\".o-slick-slider__slide-content\") %>% html_node('.m-bikegrid__size') %>% \n    html_text() %>% str_extract(\"[0-9].+\") %>% enframe(name = \"position\",value = \"size\")\n  #Get the prices\n  bike_prices <- read_html(link) %>% html_nodes(\".m-serienpanel__price--active\") %>% html_text() %>% \n    str_remove(\"^ .$\") %>%  stri_remove_empty() %>%  enframe(name='position',value = 'price')\n  #combine three using position\n   model_infor %>% left_join(bike_sizes) %>% left_join(bike_prices) %>%\n    filter(position!=23)\n}\n\ncategory_1 <-  bike_category_url_tbl$category_url[2] # Get the URl for 1st category\nbike_model  <- get_bike_data(link = category_1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n```\n:::\n\n```{.r .cell-code}\nbike_category_url_vector <- bike_category_url_tbl %>% pull(category_url) #Creates a vector with all the urls\nbike_data_lst <- map(bike_category_url_vector,get_bike_data) # repeats the function for each of the urls\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n#> Joining with `by = join_by(position)`\n```\n:::\n\n```{.r .cell-code}\nbike_data_tbl <- bind_rows(bike_data_lst) %>% rowid_to_column(var = \"ID\") %>% \n  separate(col = price,sep = \" \",into = c(\"price\", \"price_2\")) %>% \n  select(-price_2)#generates tibble with all the data\nbike_data_tbl %>% head(10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"position\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Model Name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"size\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"price\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"1\",\"3\":\"JEALOUS 8.0\",\"4\":\"29\\\"\",\"5\":\"2599\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"JEALOUS 9.0\",\"4\":\"29\\\"\",\"5\":\"3199\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"JEALOUS 10.0\",\"4\":\"29\\\"\",\"5\":\"4299\"},{\"1\":\"4\",\"2\":\"4\",\"3\":\"JEALOUS 10.0 EA\",\"4\":\"29\\\"\",\"5\":\"5299\"},{\"1\":\"5\",\"2\":\"5\",\"3\":\"JEALOUS AL 8.0\",\"4\":\"29\\\"\",\"5\":\"1199\"},{\"1\":\"6\",\"2\":\"6\",\"3\":\"JEALOUS AL 8.0 HD\",\"4\":\"29\\\"\",\"5\":\"1499\"},{\"1\":\"7\",\"2\":\"7\",\"3\":\"JEALOUS AL 9.0\",\"4\":\"29\\\"\",\"5\":\"1699\"},{\"1\":\"8\",\"2\":\"8\",\"3\":\"JEALOUS AL 9.0\",\"4\":\"29\\\"\",\"5\":\"1699\"},{\"1\":\"9\",\"2\":\"9\",\"3\":\"JEALOUS AL 10.0\",\"4\":\"29\\\"\",\"5\":\"1999\"},{\"1\":\"10\",\"2\":\"10\",\"3\":\"JEALOUS AL 10.0 SL\",\"4\":\"29\\\"\",\"5\":\"2199\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}