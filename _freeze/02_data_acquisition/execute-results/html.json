{
  "hash": "ee10d65fbd8c0ae427c37c42bcfb3fa8",
  "result": {
    "markdown": "---\ntitle: \"02 Data Acqusition\"\ndate: \"2021-04\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n\n\n# Data Aquisition: API Challenge\n## Top Songs for Taylor Swift from Spotify\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_a87aa23fb6d0a379d7122846d6cbd185'}\n\n```{.r .cell-code}\nlibrary(httr)\n#replace this with yours\nclientID = 'a8a4b01d406740f988365684cd610827'\nsecret = 'e63cc9177af64612a0d8445e37635e39'\nresponse = POST(\n  'https://accounts.spotify.com/api/token',\n  accept_json(),\n  authenticate(clientID, secret),\n  body = list(grant_type = 'client_credentials'),\n  encode = 'form',\n  verbose()\n)\n```\n\n```{.r .cell-code}\nmytoken = content(response)$access_token\nHeaderValue = paste0('Bearer ', mytoken)\n\nalbumID = \"1NAmidJlEaVgA3MpcPFYGq\"\ntrack_URI = paste0('https://api.spotify.com/v1/albums/', albumID,'/tracks')\ntrack_response = GET(url = track_URI, add_headers(Authorization = HeaderValue))\ntracks = content(track_response)\n\nntracks = length(tracks$items)\ntracks_list<-data.frame(\n  name=character(ntracks),\n  id=character(ntracks),\n  artist=character(ntracks),\n  disc_number=numeric(ntracks),\n  track_number=numeric(ntracks),\n  duration_ms=numeric(ntracks),\n  stringsAsFactors=FALSE\n)\n\nfor(i in 1:ntracks){\n  tracks_list[i,]$id <- tracks$items[[i]]$id\n  tracks_list[i,]$name <- tracks$items[[i]]$name\n  tracks_list[i,]$artist <- tracks$items[[i]]$artists[[1]]$name\n  tracks_list[i,]$disc_number <- tracks$items[[i]]$disc_number\n  tracks_list[i,]$track_number <- tracks$items[[i]]$track_number\n  tracks_list[i,]$duration_ms <- tracks$items[[i]]$duration_ms\n}\ntracks_list\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                              name                     id\n1                        I Forgot That You Existed 43rA71bccXFGD4C8GOpIlN\n2                                     Cruel Summer 1BxfuPKGuaTgP7aM0Bbdwr\n3                                            Lover 1dGr1c8CrMLDpV6mPbImSI\n4                                          The Man 3RauEVgRgj1IuWdJ9fDs70\n5                                       The Archer 3pHkh7d0lzM2AldUtz2x37\n6                                 I Think He Knows 2YWtcWi3a83pdEg3Gif4Pd\n7           Miss Americana & The Heartbreak Prince 214nt20w5wOxJnY462klLw\n8                                      Paper Rings 4y5bvROuBDPr5fuwXbIBZR\n9                                  Cornelia Street 12M5uqx0ZuwkpLp5rJim1a\n10                        Death By A Thousand Cuts 2dgFqt3w9xIQRjhPtwNk3D\n11                                      London Boy 1LLXZFeAHK9R4xUramtUKw\n12       Soon You’ll Get Better (feat. The Chicks) 4AYtqFyFbX0Xkc2wtcygTr\n13                                       False God 5hQSXkFgbxjZo9uCwd11so\n14                           You Need To Calm Down 6RRNNciQGZEXnqk8SQ9yv5\n15                                       Afterglow 1SymEzIT3H8UZfibCs3TYi\n16 ME! (feat. Brendon Urie of Panic! At The Disco) 2Rk4JlNc2TPmZe2af99d45\n17                      It’s Nice To Have A Friend 1SmiQ65iSAbPto6gPFlBYm\n18                                        Daylight 1fzAuUVbzlhZ1lJAx9PtY6\n         artist disc_number track_number duration_ms\n1  Taylor Swift           1            1      170640\n2  Taylor Swift           1            2      178426\n3  Taylor Swift           1            3      221306\n4  Taylor Swift           1            4      190360\n5  Taylor Swift           1            5      211240\n6  Taylor Swift           1            6      173386\n7  Taylor Swift           1            7      234146\n8  Taylor Swift           1            8      222400\n9  Taylor Swift           1            9      287266\n10 Taylor Swift           1           10      198533\n11 Taylor Swift           1           11      190240\n12 Taylor Swift           1           12      201586\n13 Taylor Swift           1           13      200306\n14 Taylor Swift           1           14      171360\n15 Taylor Swift           1           15      223293\n16 Taylor Swift           1           16      193000\n17 Taylor Swift           1           17      150440\n18 Taylor Swift           1           18      293453\n```\n:::\n:::\n\n\n# Data Aquisition: Web Scraping Challenge\n\nLast compiled: 2023-08-08\n\n\n\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_2dfba88fe3acb335cc4c8c5e76698400'}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(stringi)\nlibrary(xopen)\nlibrary(jsonlite)\nlibrary(tidyverse)\nlibrary(glue)\n\nurl <- \"https://www.radon-bikes.de\"\nxopen(url)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning cmd /c start \"\\\"\\\"\" /b \"https://www.radon-bikes.de\"\n```\n:::\n\n```{.r .cell-code}\nhtml_home <- read_html(url)\n#Get url fpr eacf of the product categories\nbike_category_url_tbl <- html_home %>% html_nodes(\".megamenu__item\") %>% html_elements(\"a\") %>% \n  html_attr('href') %>% enframe(name = 'position',value = 'title') %>% mutate(\n    category_url=glue(\"https://www.radon-bikes.de{title}\")\n  ) %>% filter(position<9)#remove accessories and gears using filter\n\n\n\n#Get the Model Names\nget_bike_data <- function(link){\n  model_infor <- read_html(link) %>% html_nodes(\".o-slick-slider__slide-content\") %>% html_element(\"h2\") %>% \n    html_text() %>% enframe(name = \"position\",value = 'Model Name')\n  #Get the sizes\n  bike_sizes <- read_html(link) %>% html_nodes(\".o-slick-slider__slide-content\") %>% html_node('.m-bikegrid__size') %>% \n    html_text() %>% str_extract(\"[0-9].+\") %>% enframe(name = \"position\",value = \"size\")\n  #Get the prices\n  bike_prices <- read_html(link) %>% html_nodes(\".m-serienpanel__price--active\") %>% html_text() %>% \n    str_remove(\"^ .$\") %>%  stri_remove_empty() %>%  enframe(name='position',value = 'price')\n  #combine three using position\n   model_infor %>% left_join(bike_sizes) %>% left_join(bike_prices) %>%\n    filter(position!=23)\n}\n\ncategory_1 <-  bike_category_url_tbl$category_url[2] # Get the URl for 1st category\nbike_model  <- get_bike_data(link = category_1)\n\nbike_category_url_vector <- bike_category_url_tbl %>% pull(category_url) #Creates a vector with all the urls\nbike_data_lst <- map(bike_category_url_vector,get_bike_data) # repeats the function for each of the urls\nbike_data_tbl <- bind_rows(bike_data_lst) %>% rowid_to_column(var = \"ID\") %>% \n  separate(col = price,sep = \" \",into = c(\"price\", \"price_2\")) %>% \n  select(-price_2)#generates tibble with all the data\nbike_data_tbl %>% head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n      ID position `Model Name`       size   price\n   <int>    <int> <chr>              <chr>  <chr>\n 1     1        1 JEALOUS 8.0        \"29\\\"\" 2599 \n 2     2        2 JEALOUS 9.0        \"29\\\"\" 3199 \n 3     3        3 JEALOUS 10.0       \"29\\\"\" 4299 \n 4     4        4 JEALOUS 10.0 EA    \"29\\\"\" 5299 \n 5     5        5 JEALOUS AL 8.0     \"29\\\"\" 1199 \n 6     6        6 JEALOUS AL 8.0 HD  \"29\\\"\" 1499 \n 7     7        7 JEALOUS AL 9.0     \"29\\\"\" 1699 \n 8     8        8 JEALOUS AL 9.0     \"29\\\"\" 1699 \n 9     9        9 JEALOUS AL 10.0    \"29\\\"\" 1999 \n10    10       10 JEALOUS AL 10.0 SL \"29\\\"\" 2199 \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}